@inject HttpClient Http
@if (string.IsNullOrEmpty(Email!.Email))
{
    <a class="btn btn-success" @onclick="(async () => {await UpdateEmailAsync();})">Update</a>
}

@code {
    //Fields
    private DeveloperModel? developer;

    private EmailRecord? EmailToUpdate;

    //Properties - Parameters -Event Callbacks
    [Parameter]
    public EmailRecord? Email { get; set; }

    [Parameter]
    public EventCallback<bool> UpdateCallback { get; set; }

    //Methods
    private async Task UpdateEmailAsync()
    {
        var developer = await Http.GetFromJsonAsync<DeveloperModel>($"/developers/{Email!.DeveloperId}");

        EmailToUpdate = new(Email.Id, Email.DeveloperId);//new up EmailRecord

        EmailToUpdate.Email = string.Format(@$"{developer!.FirstName!.ToLower()}.{developer!.LastName!.ToLower()}@chrsolutions.com");

        var result = await Http.PutAsJsonAsync("/emails", EmailToUpdate, CancellationToken.None);

        await UpdateCallback.InvokeAsync(result.IsSuccessStatusCode);//event payload (bool)
    }
}
